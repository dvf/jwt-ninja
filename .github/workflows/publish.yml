name: Publish to PyPI
on:
  release:
    types: [ published ]

jobs:
  publish:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/astral-sh/uv:python3.12-bookworm-slim
    permissions:
      contents: write
    steps:
      # Install necessary utilities (curl, jq and git)
      - name: Install curl jq git
        run: |
          apt-get update && apt-get install -y curl jq git:

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Get version and release notes from Release Drafter
      - name: Extract version and release notes
        id: release
        run: |
          VERSION=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')
          NOTES=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            ${{ github.event.release.url }} | jq -r '.body')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Update pyproject.toml with version
      - name: Update pyproject.toml version
        run: |
          sed -i "s/version = \".*\"/version = \"${{ steps.release.outputs.VERSION }}\"/" pyproject.toml

      # Commit changes
      - name: Commit version and changelog
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add pyproject.toml
          git commit -m "chore: update version to ${{ steps.release.outputs.VERSION }} and changelog"
          git push

      - name: Build package
        run: uv build

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.UV_PUBLISH_TOKEN }}
        run: uv publish dist/*-${VERSION}* --token $UV_PUBLISH_TOKEN